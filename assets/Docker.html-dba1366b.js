import{_ as p,Y as u,Z as m,a1 as o,a3 as s,$ as a,a0 as e,a2 as r,E as c}from"./framework-fdb90ab2.js";const b="/assets/Docker-21a59e85.svg",v={},k=r(`<h2 id="容器安装" tabindex="-1"><a class="header-anchor" href="#容器安装" aria-hidden="true">#</a> 容器安装</h2><div class="language-bash line-numbers-mode" data-ext="sh"><pre class="language-bash"><code><span class="token function">bash</span> <span class="token operator">&lt;</span><span class="token punctuation">(</span><span class="token function">curl</span> <span class="token parameter variable">-L</span> gitee.com/TimeRainStarSky/TRSS_AllBot/raw/main/Install-Docker.sh<span class="token punctuation">)</span>
</code></pre><div class="line-numbers" aria-hidden="true"><div class="line-number"></div></div></div><details class="hint-container details"><summary>自定义功能</summary><figure><img src="`+b+`" alt="示意图" tabindex="0" loading="lazy"><figcaption>示意图</figcaption></figure><p>自定义 安装路径 <code>DIR</code> 启动命令 <code>CMD</code> 容器名 <code>DKNAME</code> （可用于多开）</p><p>举例：将脚本安装至 <code>/Bot</code> 启动命令 <code>trss</code> 容器名 <code>TRSS</code></p><div class="language-bash line-numbers-mode" data-ext="sh"><pre class="language-bash"><code><span class="token comment"># 原安装命令</span>
<span class="token function">bash</span> <span class="token operator">&lt;</span><span class="token punctuation">(</span>x<span class="token punctuation">)</span>
<span class="token comment"># 修改后安装命令</span>
<span class="token assign-left variable">DIR</span><span class="token operator">=</span>/Bot <span class="token assign-left variable">CMD</span><span class="token operator">=</span>trss <span class="token assign-left variable">DKNAME</span><span class="token operator">=</span>TRSS <span class="token function">bash</span> <span class="token operator">&lt;</span><span class="token punctuation">(</span>x<span class="token punctuation">)</span>
</code></pre><div class="line-numbers" aria-hidden="true"><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div></div></div></details><h2 id="容器管理" tabindex="-1"><a class="header-anchor" href="#容器管理" aria-hidden="true">#</a> 容器管理</h2>`,4),h=a("div",{class:"language-bash line-numbers-mode","data-ext":"sh"},[a("pre",{class:"language-bash"},[a("code",null,[a("span",{class:"token function"},"docker"),e(),a("span",{class:"token function"},"ps"),e(),a("span",{class:"token parameter variable"},"-as"),e(`
`)])]),a("div",{class:"line-numbers","aria-hidden":"true"},[a("div",{class:"line-number"})])],-1),g=a("div",{class:"language-bash line-numbers-mode","data-ext":"sh"},[a("pre",{class:"language-bash"},[a("code",null,[a("span",{class:"token function"},"docker"),e(" start 容器名 "),a("span",{class:"token comment"},"# 默认开机自启，无需手动启动"),e(`
`)])]),a("div",{class:"line-numbers","aria-hidden":"true"},[a("div",{class:"line-number"})])],-1),f=a("div",{class:"language-bash line-numbers-mode","data-ext":"sh"},[a("pre",{class:"language-bash"},[a("code",null,[a("span",{class:"token function"},"docker"),e(" restart "),a("span",{class:"token parameter variable"},"-t0"),e(` 容器名
`)])]),a("div",{class:"line-numbers","aria-hidden":"true"},[a("div",{class:"line-number"})])],-1),_=a("div",{class:"language-bash line-numbers-mode","data-ext":"sh"},[a("pre",{class:"language-bash"},[a("code",null,[a("span",{class:"token function"},"docker"),e(" stop "),a("span",{class:"token parameter variable"},"-t0"),e(` 容器名
`)])]),a("div",{class:"line-numbers","aria-hidden":"true"},[a("div",{class:"line-number"})])],-1),x=a("div",{class:"language-bash line-numbers-mode","data-ext":"sh"},[a("pre",{class:"language-bash"},[a("code",null,[a("span",{class:"token function"},"docker"),e(),a("span",{class:"token function"},"rm"),e(),a("span",{class:"token parameter variable"},"-f"),e(` 容器名
`)])]),a("div",{class:"line-numbers","aria-hidden":"true"},[a("div",{class:"line-number"})])],-1),D=a("div",{class:"language-bash line-numbers-mode","data-ext":"sh"},[a("pre",{class:"language-bash"},[a("code",null,[a("span",{class:"token function"},"docker"),e(" run "),a("span",{class:"token parameter variable"},"-itd"),e(`
  `),a("span",{class:"token parameter variable"},"-h"),e(` 主机名
  `),a("span",{class:"token parameter variable"},"--name"),e(` 容器名
  `),a("span",{class:"token parameter variable"},"-v"),e(` 数据路径:/root/项目名
  `),a("span",{class:"token parameter variable"},"--restart"),e(" always "),a("span",{class:"token comment"},"#自启动"),e(`
  `),a("span",{class:"token parameter variable"},"-p"),e(" 主机端口:容器端口 "),a("span",{class:"token comment"},"#端口映射"),e(`
  镜像名
`)])]),a("div",{class:"line-numbers","aria-hidden":"true"},[a("div",{class:"line-number"}),a("div",{class:"line-number"}),a("div",{class:"line-number"}),a("div",{class:"line-number"}),a("div",{class:"line-number"}),a("div",{class:"line-number"}),a("div",{class:"line-number"})])],-1),y=a("h2",{id:"常见问题",tabindex:"-1"},[a("a",{class:"header-anchor",href:"#常见问题","aria-hidden":"true"},"#"),e(" 常见问题")],-1),w={class:"hint-container details"},S=a("summary",null,"Docker 安装失败",-1),A={href:"https://docker.com",target:"_blank",rel:"noopener noreferrer"},C={href:"https://vuepress.mirror.docker-practice.com/install",target:"_blank",rel:"noopener noreferrer"},E=r(`<details class="hint-container details"><summary>Cannot connect to the Docker daemon at unix:///var/run/docker.sock</summary><p>启动 Docker Daemon</p><div class="language-bash line-numbers-mode" data-ext="sh"><pre class="language-bash"><code><span class="token comment"># systemctl</span>
systemctl <span class="token builtin class-name">enable</span> <span class="token parameter variable">--now</span> <span class="token function">docker</span>
<span class="token comment"># service</span>
<span class="token function">service</span> <span class="token function">docker</span> start
</code></pre><div class="line-numbers" aria-hidden="true"><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div></div></div></details><details class="hint-container details"><summary>Got permission denied while trying to connect to the Docker daemon socket at unix:///var/run/docker.sock</summary><p>添加当前用户到 docker 组</p><div class="language-bash line-numbers-mode" data-ext="sh"><pre class="language-bash"><code><span class="token function">sudo</span> <span class="token function">usermod</span> <span class="token parameter variable">-aG</span> <span class="token function">docker</span> <span class="token environment constant">$USER</span>
</code></pre><div class="line-numbers" aria-hidden="true"><div class="line-number"></div></div></div></details><hr><p>服务器 Linux 发行版 推荐使用 <code>Debian 11</code> 以上</p><p>若只有 <code>Debian 10</code> 以下，可执行以下命令并重启服务器后升级到 <code>Debian 12</code></p><div class="language-bash line-numbers-mode" data-ext="sh"><pre class="language-bash"><code><span class="token builtin class-name">echo</span> <span class="token string">&#39;deb http://ftp.cn.debian.org/debian bookworm main contrib non-free non-free-firmware
deb http://ftp.cn.debian.org/debian bookworm-updates main contrib non-free non-free-firmware
deb http://ftp.cn.debian.org/debian-security bookworm-security main contrib non-free non-free-firmware&#39;</span><span class="token operator">&gt;</span>/etc/apt/sources.list
<span class="token function">apt</span> update <span class="token operator">&amp;&amp;</span> <span class="token function">apt</span> full-upgrade <span class="token parameter variable">-y</span> <span class="token operator">&amp;&amp;</span> <span class="token function">apt</span> autoremove <span class="token parameter variable">--purge</span> <span class="token parameter variable">-y</span> <span class="token operator">&amp;&amp;</span> <span class="token function">apt</span> clean
</code></pre><div class="line-numbers" aria-hidden="true"><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div></div></div>`,6);function R(T,B){const d=c("CodeTabs"),l=c("ExternalLinkIcon");return u(),m("div",null,[k,o(d,{id:"19",data:[{title:"查看容器"},{title:"启动容器"},{title:"重启容器"},{title:"停止容器"},{title:"删除容器"},{title:"重建容器"}],"tab-id":"Docker"},{tab0:s(({title:n,value:t,isActive:i})=>[h]),tab1:s(({title:n,value:t,isActive:i})=>[g]),tab2:s(({title:n,value:t,isActive:i})=>[f]),tab3:s(({title:n,value:t,isActive:i})=>[_]),tab4:s(({title:n,value:t,isActive:i})=>[x]),tab5:s(({title:n,value:t,isActive:i})=>[D]),_:1}),y,a("details",w,[S,a("ul",null,[a("li",null,[e("Docker 官方教程："),a("a",A,[e("https://docker.com"),o(l)])]),a("li",null,[e("Docker-Practice 教程："),a("a",C,[e("https://vuepress.mirror.docker-practice.com/install"),o(l)])])])]),E])}const I=p(v,[["render",R],["__file","Docker.html.vue"]]);export{I as default};
