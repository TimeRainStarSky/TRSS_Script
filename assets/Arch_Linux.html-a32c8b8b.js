import{_ as c,X as o,Y as r,a0 as d,a1 as e,Z as a,$ as s,a2 as p,C as u}from"./framework-86c85d47.js";const m="/assets/Arch_Linux-caa6794e.svg",h={},b=a("h2",{id:"脚本安装",tabindex:"-1"},[a("a",{class:"header-anchor",href:"#脚本安装","aria-hidden":"true"},"#"),s(" 脚本安装")],-1),v=a("div",{class:"language-bash line-numbers-mode","data-ext":"sh"},[a("pre",{class:"language-bash"},[a("code",null,[a("span",{class:"token function"},"bash"),s(),a("span",{class:"token operator"},"<"),a("span",{class:"token punctuation"},"("),a("span",{class:"token function"},"curl"),s(),a("span",{class:"token parameter variable"},"-L"),s(" gitee.com/TimeRainStarSky/TRSS_AllBot/raw/main/Install.sh"),a("span",{class:"token punctuation"},")"),s(`
`)])]),a("div",{class:"line-numbers","aria-hidden":"true"},[a("div",{class:"line-number"})])],-1),k=a("div",{class:"language-bash line-numbers-mode","data-ext":"sh"},[a("pre",{class:"language-bash"},[a("code",null,[a("span",{class:"token function"},"bash"),s(),a("span",{class:"token operator"},"<"),a("span",{class:"token punctuation"},"("),a("span",{class:"token function"},"curl"),s(),a("span",{class:"token parameter variable"},"-L"),s(" gitee.com/TimeRainStarSky/TRSS_OneBot/raw/linux/Install.sh"),a("span",{class:"token punctuation"},")"),s(`
`)])]),a("div",{class:"line-numbers","aria-hidden":"true"},[a("div",{class:"line-number"})])],-1),g=p('<details class="hint-container details"><summary>自定义功能</summary><figure><img src="'+m+`" alt="示意图" tabindex="0" loading="lazy"><figcaption>示意图</figcaption></figure><p>自定义 安装路径 <code>DIR</code> 和 启动命令 <code>CMD</code>（可用于多开）</p><p>举例：将脚本安装至 <code>/Bot</code> 启动命令 <code>trss</code></p><div class="language-bash line-numbers-mode" data-ext="sh"><pre class="language-bash"><code><span class="token comment"># 原安装命令</span>
<span class="token function">bash</span> <span class="token operator">&lt;</span><span class="token punctuation">(</span>x<span class="token punctuation">)</span>
<span class="token comment"># 修改后安装命令</span>
<span class="token assign-left variable">DIR</span><span class="token operator">=</span>/Bot <span class="token assign-left variable">CMD</span><span class="token operator">=</span>trss <span class="token function">bash</span> <span class="token operator">&lt;</span><span class="token punctuation">(</span>x<span class="token punctuation">)</span>
</code></pre><div class="line-numbers" aria-hidden="true"><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div></div></div></details><h2 id="常见问题" tabindex="-1"><a class="header-anchor" href="#常见问题" aria-hidden="true">#</a> 常见问题</h2><details class="hint-container details"><summary>未能同步所有数据库（无法锁定数据库）</summary><div class="language-bash line-numbers-mode" data-ext="sh"><pre class="language-bash"><code><span class="token function">rm</span> /var/lib/pacman/db.lck
</code></pre><div class="line-numbers" aria-hidden="true"><div class="line-number"></div></div></div></details><details class="hint-container details"><summary>无法提交处理（无效或已损坏的软件包）</summary><div class="language-bash line-numbers-mode" data-ext="sh"><pre class="language-bash"><code>pacman <span class="token parameter variable">-Syy</span> archlinux-keyring
</code></pre><div class="line-numbers" aria-hidden="true"><div class="line-number"></div></div></div></details>`,4);function _(f,x){const n=u("CodeTabs");return o(),r("div",null,[b,d(n,{id:"3",data:[{title:"TRSS AllBot"},{title:"TRSS OneBot"}],"tab-id":"Script"},{tab0:e(({title:t,value:i,isActive:l})=>[v]),tab1:e(({title:t,value:i,isActive:l})=>[k]),_:1}),g])}const y=c(h,[["render",_],["__file","Arch_Linux.html.vue"]]);export{y as default};
